apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

repositories {
    mavenLocal()
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-snapshot" }
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-release" }
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenCentral()
}

apply from: 'dependencies-archive.gradle'    // <- enable this when building an .aar
// apply from: 'dependencies-test.gradle'       // <- enable this when testing

task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("UPLOAD_USERNAME") + ":" + System.getenv("UPLOAD_PASSWORD")
        mkcolPath = System.getenv("UPLOAD_MAVEN_REPO_URL") + "com/couchbase/lite/java-listener/" + System.getenv("UPLOAD_VERSION_CBLITE_LISTENER") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

def mavenPath() {
    artifactory_local == "true" ?
            'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath :
            artifactory_contextUrl + "/libs-release-local"}
// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("UPLOAD_MAVEN_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            //repository(url: System.getenv("UPLOAD_MAVEN_REPO_URL")) {
            //    authentication(userName: System.getenv("UPLOAD_USERNAME"), password: System.getenv("UPLOAD_PASSWORD"))
            //}
            repository(url: mavenPath()) {
                authentication(userName: "${artifactory_user}", password: "${artifactory_password}")
            }

            pom.version = System.properties['UPLOAD_VERSION_CBLITE']
            //pom.version = System.getenv("UPLOAD_VERSION_CBLITE_LISTENER")
            pom.groupId = 'com.couchbase.lite'
            pom.artifactId = 'java-listener'
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

